TAP version 13
    # Subtest: child test
    not ok 1 - should be equal
      ---
      {"at":{"column":5,"file":"test/test/equivalent.js","line":3},"compare":"===","found":"foo\nbaz\nbar\n","source":"t.equal('foo\\nbaz\\nbar\\n', 'foo\\nblerb\\nbar\\n')\n","wanted":"foo\nblerb\nbar\n"}
      ...
    not ok 2 - should be equal
      ---
      {"at":{"column":5,"file":"test/test/equivalent.js","line":4},"compare":"===","found":"foo","source":"t.equal('foo', 'foople')\n","wanted":"foople"}
      ...
    not ok 3 - should be equal
      ---
      {"at":{"column":5,"file":"test/test/equivalent.js","line":5},"compare":"===","found":1,"source":"t.equal(1, '1')\n","wanted":"1"}
      ...
    not ok 4 - should be equivalent
      ---
      {"at":{"column":5,"file":"test/test/equivalent.js","line":6},"found":{"bar":1,"extra":9,"foo":"bar"},"source":"t.same({ foo: 'bar', bar: 1, extra: 9 }, { bar: 1, foo: 'baz', missing: true })\n","wanted":{"bar":1,"foo":"baz","missing":true}}
      ...
    not ok 5 - should be equivalent
      ---
      {"at":{"column":5,"file":"test/test/equivalent.js","line":7},"found":{"bar":1,"extra":9,"foo":"bar","foop":2},"source":"t.same({ foop: 2, foo: 'bar', bar: 1, extra: 9 },\n","wanted":{"bar":1,"foo":"baz","foop":2,"missing":true}}
      ...
    not ok 6 - should be equivalent
      ---
      {"at":{"column":5,"file":"test/test/equivalent.js","line":9},"found":{"bar":1,"extra":9,"foo":"baz","prop":1,"x":[1,2]},"source":"t.same({ foo: 'baz', bar: 1, extra: 9, x: [1, 2], prop: 1 }, { prop: 1, bar: 1, foo: 'baz', missing: true, x: [1, 2], z: 1 })\n","wanted":{"bar":1,"foo":"baz","missing":true,"prop":1,"x":[1,2],"z":1}}
      ...
    1..6
    # failed 6 of 6 tests
not ok 1 - child test ___/# time=[0-9.]+(ms)?/~~~
  ---
  {"at":{"column":3,"file":"test/test/equivalent.js","line":2},"results":{"count":6,"fail":6,"ok":false,"pass":0,"plan":{"end":6,"start":1}},"source":"t.test('child test', function (t) {\n"}
  ...

1..1
# failed 1 of 1 tests
___/# time=[0-9.]+(ms)?/~~~

