TAP version 13
ok 1 - expect truthy value
    # Subtest: plans of 1
    ok 1 - before child
        # Subtest: sync thrower
        1..1
        ok 1 - before the bomb
    not ok 2 - sync thrower ___/# time=[0-9.]+(ms)?/~~~
      ---
      {"at":{"file":"test/test/throws-and-plans.js","line":20,"column":5},"source":"function (tt) {\n    tt.plan(1)\n    tt.pass('before the bomb')\n\n    throw new Error('pwnSync')\n    tt.pass('after the bomb')\n    tt.end()\n  }","results":{"plan":{"start":1,"end":1},"count":1,"pass":1,"ok":true}}
      ...

    not ok 3 - Error: pwnSync
      ---
      {"at":{"file":"___/.*/~~~throws-and-plans.js","line":24,"column":11},"message":"Error: pwnSync","source":"throw new Error('pwnSync')\n"}
      ...
        # Subtest: async thrower
        1..1
        ok 1 - before set the bomb
    not ok 4 - async thrower ___/# time=[0-9.]+(ms)?/~~~
      ---
      {"at":{"file":"test/test/throws-and-plans.js","line":29,"column":5},"source":"function (tt) {\n    tt.plan(1)\n    tt.pass('before set the bomb')\n    setTimeout(function () {\n      tt.pass('before the bomb')\n      throw new Error('pwn')\n      tt.pass('after the bomb')\n      tt.end()\n    })\n    tt.pass('after set the bomb')\n  }","results":{"plan":{"start":1,"end":1},"count":1,"pass":1,"ok":true}}
      ...

    ok 5 - after child
    1..5
    # failed 3 of 5 tests
not ok 2 - plans of 1 ___/# time=[0-9.]+(ms)?/~~~
  ---
  {"at":{"file":"test/test/throws-and-plans.js","line":17,"column":3},"source":"function (t) {\n  t.pass('before child')\n\n  t.test('sync thrower', function (tt) {\n    tt.plan(1)\n    tt.pass('before the bomb')\n\n    throw new Error('pwnSync')\n    tt.pass('after the bomb')\n    tt.end()\n  })\n\n  t.test('async thrower', function (tt) {\n    tt.plan(1)\n    tt.pass('before set the bomb')\n    setTimeout(function () {\n      tt.pass('before the bomb')\n      throw new Error('pwn')\n      tt.pass('after the bomb')\n      tt.end()\n    })\n    tt.pass('after set the bomb')\n  })\n  t.pass('after child')\n  t.end()\n}","results":{"plan":{"start":1,"end":5},"count":5,"pass":2,"ok":false,"fail":3}}
  ...

    # Subtest: no assert only throw
    not ok 1 - AssertionError: false is truthy right?
      ---
      {"at":{"file":"___/.*/~~~throws-and-plans.js","line":47,"column":3},"name":"AssertionError","actual":false,"expected":true,"operator":"==","generatedMessage":false,"message":"AssertionError: false is truthy right?","source":"assert(false, 'false is truthy right?')\n"}
      ...
    1..1
    # failed 1 of 1 tests
not ok 3 - no assert only throw ___/# time=[0-9.]+(ms)?/~~~
  ---
  {"at":{"file":"test/test/throws-and-plans.js","line":44,"column":3},"source":"function (t) {\n  var assert = require('assert')\n  assert(true, 'true is truthy')\n  assert(false, 'false is truthy right?')\n}","results":{"plan":{"start":1,"end":1},"count":1,"pass":0,"ok":false,"fail":1}}
  ...

not ok 4 - Error: pwn
  ---
  {"at":{"file":"___/.*/~~~throws-and-plans.js","line":34,"column":13,"function":"null._onTimeout"},"message":"Error: pwn","source":"throw new Error('pwn')\n"}
  ...
1..4
# failed 3 of 4 tests
___/# time=[0-9.]+(ms)?/~~~

